<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="minSQL">
	<!-- mypageSNS 창으로 넘어갈때 -->
	<select id="mypageSNS" parameterType="spring.Member" resultType="bean.BoardBean">
		select * from a_board
	    	where mem_num=#{mem_Num} and board_secret = 1 and board_type = 1
	    	ORDER BY board_date DESC
	</select>	
	<!-- mypagePro 게시글 가져오기 -->
	<select id="mypageProBoard" parameterType="spring.Member" resultType="bean.BoardBean">
		select * from a_board
	    	where mem_num=#{mem_Num} and board_type = 2
	    	ORDER BY board_date DESC
	</select>
	<!-- mypagePro 남 게시글 가져오기 -->
	<select id="mypageProBoardNam" parameterType="spring.Member" resultType="bean.BoardBean">
		select * from a_board
	    	where mem_num=#{mem_Num} and (board_secret = 1 or board_secret = 2) and board_type = 2
	    	ORDER BY board_date DESC
	</select>
	<!-- mypagePro 멤버 정보 가져오기 -->
	<select id="mypagePro" parameterType="spring.Member" resultType="bean.FolderBean">
		select * from a_folder where mem_num=#{mem_Num}
	</select>
	<!-- mypagePro 남의 멤버 정보  가져오기 -->
	<select id="mypageProNam" parameterType="spring.Member" resultType="bean.FolderBean">
		select * from a_folder where mem_num=#{mem_Num} and folder_secret = 1
	</select>
	<!-- Folder 추가하기 -->
	<insert id="mypageFolder" parameterType="bean.FolderBean">
		insert into a_folder (folder_num, mem_num, folder_title, folder_secret) values 
		(a_folder_seq.nextval, #{mem_Num}, #{folder_Title}, #{folder_secret})
	</insert>
	<!-- Folder 삭제하기 -->
	<delete id="folderDelete" parameterType="String">
		delete from a_folder where folder_num = #{num}
	</delete>
	<!-- Board 삭제하기 -->
	<delete id="mypageBoardDelete" parameterType="String">
		delete from a_board where board_num = #{num}		
	</delete>
	<!-- folder Follow -->
	<insert id="folderFollow" parameterType="bean.FollowBean">
		insert into a_follow values (a_follow_seq.nextval, 
			#{mem_Num}, null, #{folder_Num}, null)
	</insert>
	<!-- folder Like -->
	<insert id="folderLikeke" parameterType="bean.LikeKeyBean">
		insert into a_like values(a_like_seq.nextval, null, 
			#{mem_Num}, null, #{like_Target_Num}, 3, 1)		
	</insert>
	<!-- 해당 폴더의 Pro 보더 들고오기 -->
	<select id="folderPage" parameterType="bean.BoardBean" resultType="bean.BoardBean">
		select * from a_board where folder_num = #{folder_Num} and board_type = 2
	</select>
	<!-- folder Page 갔을때 -->
	<select id="mypageFolderView" parameterType="bean.FolderBean" resultType="bean.FolderBean">
		select * from a_folder where folder_title = #{folder_Title}
	</select>
	<!-- folder 이름을 가져오는거? -->
	<select id="folderName" parameterType="String" resultType="String">
		select folder_title from a_folder where folder_num = #{num1}
	</select>
	<!-- 글 보기 -->
	<select id="mypageWritingView" parameterType="String" resultType="bean.BoardBean">
		select * from a_board where board_num = #{num}
	</select>
	<!-- 조회수 증가 -->
	<update id="boardReadCount" parameterType="String">
		update a_board set BOARD_READ_COUNT = BOARD_READ_COUNT+1 where board_num = #{num}
	</update>
	<!-- 댓글 달기 -->
	<insert id="mypageRe" parameterType="bean.ReBean">
		insert into a_re values(a_re_seq.nextval, #{mem_Num}, 
			null, #{target_Num}, sysdate, #{re_Content}, 1)
	</insert>
	<!-- 댓글 삭제 -->
	<delete id="deleteRe" parameterType="String">
		delete from a_re where re_num = #{num}
	</delete>
	<!-- 글 볼때 멤버와 보더의 정보 가져오기 -->
	<select id="BoardMemberBean" parameterType="String" resultType="bean.BoardMemberBean">
		select b.board_num, m.mem_num, m.MEM_NICKNAME, B.BOARD_CONTENT, B.BOARD_DATE, B.BOARD_SECRET,
  		  	B.BOARD_FILE, B.BOARD_TYPE, m.mem_id, m.MEM_PHOTO
  			from a_board b, a_member m 
  			where b.mem_num = m.mem_num and b.board_num=#{num}
	</select>
	<!-- 게시글의 좋아요 갯수 가져오기 -->
	<select id="boardLikeNum" parameterType="String" resultType="int">
		select count(*) from a_like where like_on = 1 and like_type = 1 and like_target_num= #{num}
	</select>
	
	<select id="boardLike" parameterType="String" resultType="bean.likeChangeBean">
		select like_target_num, mem_num from a_like 
			where like_on = 1 and like_type = 1 and like_target_num= #{num}
	</select>
	<!-- 댓글 가져오기 -->
	<select id="reBean" parameterType="String" resultType="bean.ReBean">
		select m.MEM_NICKNAME, m.mem_photo, r.RE_CONTENT, r.RE_DATE, r.mem_num, r.re_num
    		from a_member m, a_re r where m.MEM_NUM = r.MEM_NUM and r.target_num = #{num}
	</select>	
</mapper>

